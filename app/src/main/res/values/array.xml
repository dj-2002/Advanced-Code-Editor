<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="font_style_array">
        <item>DEFAULT</item>
        <item>DEFAULT_BOLD</item>
        <item>MONOSPACE</item>
        <item>SANS_SARIF</item>
        <item>SERIF</item>
    </string-array>

    <!--Java Keywords List-->
    <string-array name="java_keywords">
        <item>public</item>
        <item>private</item>
        <item>protected</item>
        <item>package</item>
        <item>abstract</item>
        <item>boolean</item>
        <item>break</item>
        <item>byte</item>
        <item>case</item>
        <item>catch</item>
        <item>char</item>
        <item>class</item>
        <item>continue</item>
        <item>default</item>
        <item>do</item>
        <item>double</item>
        <item>else</item>
        <item>enum</item>
        <item>extends</item>
        <item>final</item>
        <item>finally</item>
        <item>float</item>
        <item>for</item>
        <item>if</item>
        <item>implements</item>
        <item>import</item>
        <item>instanceof</item>
        <item>int</item>
        <item>interface</item>
        <item>long</item>
        <item>native</item>
        <item>new</item>
        <item>return</item>
        <item>short</item>
        <item>static</item>
        <item>strictfp</item>
        <item>super</item>
        <item>switch</item>
        <item>synchronized</item>
        <item>this</item>
        <item>throw</item>
        <item>transient</item>
        <item>try</item>
        <item>void</item>
        <item>volatile</item>
        <item>while</item>
    </string-array>

    <!--GoLang Keywords List-->
    <string-array name="go_keywords">
        <item>break</item>
        <item>default</item>
        <item>func</item>
        <item>interface</item>
        <item>select</item>
        <item>case</item>
        <item>defer</item>
        <item>go</item>
        <item>map</item>
        <item>struct</item>
        <item>chan</item>
        <item>else</item>
        <item>goto</item>
        <item>package</item>
        <item>switch</item>
        <item>const</item>
        <item>fallthrough</item>
        <item>if</item>
        <item>bool</item>
        <item>byte</item>
        <item>cap</item>
        <item>close</item>
        <item>complex</item>
        <item>complex64</item>
        <item>complex128</item>
        <item>uint16</item>
        <item>copy</item>
        <item>false</item>
        <item>float32</item>
        <item>float64</item>
        <item>imag</item>
        <item>int</item>
        <item>int8</item>
        <item>int16</item>
        <item>uint32</item>
        <item>int32</item>
        <item>int64</item>
        <item>len</item>
        <item>make</item>
        <item>new</item>
        <item>nil</item>
        <item>uint64</item>
        <item>range</item>
        <item>type</item>
        <item>continue</item>
        <item>for</item>
        <item>import</item>
        <item>return</item>
        <item>var</item>
    </string-array>

    <!--Python Keywords List-->
    <string-array name="python_keywords">
        <item>False</item>
        <item>await</item>
        <item>else</item>
        <item>import</item>
        <item>pass</item>
        <item>None</item>
        <item>break</item>
        <item>except</item>
        <item>in</item>
        <item>raise</item>
        <item>True</item>
        <item>class</item>
        <item>finally</item>
        <item>is</item>
        <item>return</item>
        <item>and</item>
        <item>continue</item>
        <item>for</item>
        <item>lambda</item>
        <item>try</item>
        <item>as</item>
        <item>def</item>
        <item>from</item>
        <item>nonlocal</item>
        <item>while</item>
        <item>assert</item>
        <item>del</item>
        <item>global</item>
        <item>not</item>
        <item>with</item>
        <item>async</item>
        <item>elif</item>
        <item>if</item>
        <item>or</item>
        <item>yield</item>
    </string-array>


    <string-array name="c_keywords">
        <item>auto</item><item>break</item><item>case</item><item>char</item><item>const</item><item>continue</item><item>default</item><item>do</item><item>double</item><item>else</item><item>enum</item><item>extern</item><item>float</item><item>for</item><item>goto</item><item>if</item><item>int</item><item>long</item><item>register</item><item>return</item><item>short</item><item>signed</item><item>sizeof</item><item>static</item><item>struct</item><item>switch</item><item>typedef</item><item>union</item><item>unsigned</item><item>void</item><item>volatile</item><item>while</item>
    </string-array>
    <string-array name="cpp_keywords">
        <item>auto</item><item>break</item><item>case</item><item>char</item><item>const</item><item>continue</item><item>default</item><item>do</item><item>double</item><item>else</item><item>enum</item><item>extern</item><item>float</item><item>for</item><item>goto</item><item>if</item><item>int</item><item>long</item><item>register</item><item>return</item><item>short</item><item>signed</item><item>sizeof</item><item>static</item><item>struct</item><item>switch</item><item>typedef</item><item>union</item><item>unsigned</item><item>void</item><item>volatile</item><item>while</item><item>asm</item><item>dynamic_cast</item><item>namespace</item><item>reinterpret_cast</item><item>bool</item><item>explicit</item><item>new</item><item>static_cast</item><item>false</item><item>catch</item><item>operator</item><item>template</item><item>friend</item><item>private</item><item>class</item><item>this</item><item>inline</item><item>public</item><item>throw</item><item>const_cast</item><item>delete</item><item>mutable</item><item>protected</item><item>true</item><item>try</item><item>typeid</item><item>typename</item><item>using</item><item>virtual</item><item>wchar_t</item>

    </string-array>
    <string-array name="javascript_keywords">
        <item>await</item><item>break</item><item>case</item><item>catch</item>
        <item>class</item><item>const</item><item>continue</item><item>debugger</item><item>default</item>
        <item>delete</item><item>do</item><item>else</item><item>enum</item><item>export</item><item>extends</item><item>false</item>
        <item>finally</item><item>for</item><item>function</item><item>if</item><item>implements</item><item>import</item>
        <item>in</item><item>instanceof</item><item>interface</item><item>let</item><item>new</item>
        <item>null</item><item>package</item><item>private</item><item>protected</item><item>public</item><item>return</item><item>super</item><item>switch</item><item>static</item><item>this</item><item>throw</item><item>try</item><item>true</item><item>typeof</item><item>var</item><item>void</item><item>while</item><item>with</item><item>yield</item>

    </string-array>
    <string-array name="html_keywords"></string-array>
    <string-array name="blank" />

    <string-array name="php_keywords">
        <item>__halt_compiler()</item><item>abstract</item><item>and</item><item>array()</item><item>as</item><item>break</item><item>callable</item><item>case</item><item>catch</item><item>class</item><item>clone</item><item>const</item><item>continue</item><item>declare</item><item>default</item><item>die()</item><item>do</item><item>echo</item><item>else</item><item>elseif</item><item>empty()</item><item>enddeclare</item><item>endfor</item><item>endforeach</item><item>endif</item><item>endswitch</item><item>endwhile</item><item>eval()</item><item>exit()</item><item>extends</item><item>final</item><item>finally</item><item>fn</item><item>for</item><item>foreach</item><item>function</item><item>global</item><item>goto</item><item>if</item><item>implements</item><item>include</item><item>include_once</item><item>instanceof</item><item>insteadof</item><item>interface</item><item>isset()</item><item>list()</item><item>match</item><item>namespace</item><item>new</item><item>or</item><item>print</item><item>private</item><item>protected</item><item>public</item><item>require</item><item>require_once</item><item>return</item><item>static</item><item>switch</item><item>throw</item><item>trait</item><item>try</item><item>unset()</item><item>use</item><item>var</item><item>while</item><item>xor</item><item>yield</item><item>yield</item><item>from</item>
    </string-array>




</resources>