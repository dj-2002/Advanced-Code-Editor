package com.nbow.advanceeditor

class ExtColorHashMap {


    companion object{                       // dark                 light
        val blue = arrayOf(0,0,255)         // no                   yes
        val green = arrayOf(0,255,0)        // yes                  no
        val orange = arrayOf(255,128,0)     // yes                  yes
        val dullGreen = arrayOf(0,200,100)  // <yes                 yes
        val yellow = arrayOf(255,255,0)     // yes                  no never
        val darkOrange = arrayOf(255,100,0) // yes                  yes
        val red = arrayOf(255,0,0)          // no sharp as blue     yes seems good not best



        fun getHashMap(extension : String) : HashMap<String, Array<Int>>?{
            val hashMap : HashMap<String,Array<Int>> = HashMap()
            when(extension){
                ".java" -> setJavaHashMap(hashMap,orange)
                ".c" -> setCHashMap(hashMap,orange)
                ".cpp" -> setCPPHashMap(hashMap,orange)
                ".js" -> setJSHashMap(hashMap,orange)
                ".php"-> setPHPHashMap(hashMap,orange)
                ".html"-> {}
                ".xml" -> {}
                ".py"->setPythonHashMap(hashMap, orange)
                ".kt"->setKotlinHashMap(hashMap,orange)
                ".cs"->setCsHashMap(hashMap, orange)
                ".r"->setRHashMap(hashMap, orange)
                ".rb"->setRubyHashMap(hashMap, orange)
                ".go"->setGoHashMap(hashMap, orange)
                ".swift"-> setSwiftHashMap(hashMap,orange)

                else -> return null
            }
            return hashMap
        }

        private fun setSwiftHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {

            hashMap.put("Class",keyword_color)
            hashMap.put("deinit",keyword_color)
            hashMap.put("Enum",keyword_color)
            hashMap.put("extension",keyword_color)
            hashMap.put("Func",keyword_color)
            hashMap.put("import",keyword_color)
            hashMap.put("Initoperator",keyword_color)
            hashMap.put("private",keyword_color)
            hashMap.put("protocol",keyword_color)
            hashMap.put("public",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("struct",keyword_color)
            hashMap.put("subscriptbreak",keyword_color)
            hashMap.put("case",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("default",keyword_color)
            hashMap.put("do",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("forreturn",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("where",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("as",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("is",keyword_color)
            hashMap.put("dynamicType",keyword_color)
            hashMap.put("super",keyword_color)
            hashMap.put("true",keyword_color)
            hashMap.put("_COLUMN_",keyword_color)
            hashMap.put("Let",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("_FILE_",keyword_color)
            hashMap.put("internal",keyword_color)
            hashMap.put("typealias",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("nil",keyword_color)
            hashMap.put("var",keyword_color)
            hashMap.put("self",keyword_color)
            hashMap.put("unowned",keyword_color)
            hashMap.put("_FUNCTION_",keyword_color)
            hashMap.put("_LINE_",keyword_color)
            hashMap.put("associativity",keyword_color)
            hashMap.put("convenience",keyword_color)
            hashMap.put("dynamic",keyword_color)
            hashMap.put("didSet",keyword_color)
            hashMap.put("precedence",keyword_color)
            hashMap.put("final",keyword_color)
            hashMap.put("get",keyword_color)
            hashMap.put("infix",keyword_color)
            hashMap.put("inout",keyword_color)
            hashMap.put("right",keyword_color)
            hashMap.put("set",keyword_color)
            hashMap.put("type",keyword_color)
            hashMap.put("lazy",keyword_color)
            hashMap.put("left",keyword_color)
            hashMap.put("mutating",keyword_color)
            hashMap.put("none",keyword_color)
            hashMap.put("weak",keyword_color)
            hashMap.put("willSet",keyword_color)
            hashMap.put("prefix",keyword_color)
            hashMap.put("nonmutating",keyword_color)
            hashMap.put("optional",keyword_color)
            hashMap.put("override",keyword_color)
            hashMap.put("postfix",keyword_color)
            hashMap.put("Protocol",keyword_color)
            hashMap.put("required",keyword_color)

        }

        private fun setGoHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {
            hashMap.put("break",keyword_color)
            hashMap.put("case",keyword_color)
            hashMap.put("chan",keyword_color)
            hashMap.put("const",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("default",keyword_color)
            hashMap.put("defer",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("fallthrough",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("func",keyword_color)
            hashMap.put("go",keyword_color)
            hashMap.put("goto",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("import",keyword_color)
            hashMap.put("interface",keyword_color)
            hashMap.put("map",keyword_color)
            hashMap.put("package",keyword_color)
            hashMap.put("range",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("select",keyword_color)
            hashMap.put("struct",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("type",keyword_color)
            hashMap.put("var",keyword_color)

        }

        private fun setRubyHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {

            hashMap.put("alias",keyword_color)
            hashMap.put("and",keyword_color)
            hashMap.put("BEGIN",keyword_color)
            hashMap.put("begin",keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("case",keyword_color)
            hashMap.put("class",keyword_color)
            hashMap.put("def",keyword_color)
            hashMap.put("defined?",keyword_color)
            hashMap.put("do",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("elsif",keyword_color)
            hashMap.put("END",keyword_color)
            hashMap.put("end",keyword_color)
            hashMap.put("ensure",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("module",keyword_color)
            hashMap.put("next",keyword_color)
            hashMap.put("nil",keyword_color)
            hashMap.put("not",keyword_color)
            hashMap.put("or",keyword_color)
            hashMap.put("redo",keyword_color)
            hashMap.put("rescue",keyword_color)
            hashMap.put("retry",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("self",keyword_color)
            hashMap.put("super",keyword_color)
            hashMap.put("then",keyword_color)
            hashMap.put("true",keyword_color)
            hashMap.put("undef",keyword_color)
            hashMap.put("unles",keyword_color)
            hashMap.put("until",keyword_color)
            hashMap.put("when",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("yield",keyword_color)
            hashMap.put("__FILE__",keyword_color)
            hashMap.put("__LINE__",keyword_color)

        }

        private fun setRHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {

            hashMap.put("if",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("repeat",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("function",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("next",keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("TRUE",keyword_color)
            hashMap.put("FALSE",keyword_color)
            hashMap.put("NULL",keyword_color)
            hashMap.put("Inf",keyword_color)
            hashMap.put("NaN",keyword_color)
            hashMap.put("NA",keyword_color)
            hashMap.put("NA_integer",keyword_color)
            hashMap.put("NA_real",keyword_color)
            hashMap.put("NA_complex_",keyword_color)
            hashMap.put("NA_character_",keyword_color)
            //hashMap.put("...",keyword_color)

        }

        private fun setCsHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {
            hashMap.put("abstract",keyword_color)
            hashMap.put("add",keyword_color)
            hashMap.put("as",keyword_color)
            hashMap.put("ascending",keyword_color)
            hashMap.put("async",keyword_color)
            hashMap.put("await",keyword_color)
            hashMap.put("base",keyword_color)
            hashMap.put("bool",keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("by",keyword_color)
            hashMap.put("byte",keyword_color)
            hashMap.put("case",keyword_color)
            hashMap.put("catch",keyword_color)
            hashMap.put("char",keyword_color)
            hashMap.put("checked",keyword_color)
            hashMap.put("class",keyword_color)
            hashMap.put("const",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("decimal",keyword_color)
            hashMap.put("default",keyword_color)
            hashMap.put("delegate",keyword_color)
            hashMap.put("descending",keyword_color)
            hashMap.put("do",keyword_color)
            hashMap.put("double",keyword_color)
            hashMap.put("dynamic",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("enum",keyword_color)
            hashMap.put("equals",keyword_color)
            hashMap.put("explicit",keyword_color)
            hashMap.put("extern",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("finally",keyword_color)
            hashMap.put("fixed",keyword_color)
            hashMap.put("float",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("foreach",keyword_color)
            hashMap.put("from",keyword_color)
            hashMap.put("get",keyword_color)
            hashMap.put("global",keyword_color)
            hashMap.put("goto",keyword_color)
            hashMap.put("group",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("implicit",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("int",keyword_color)
            hashMap.put("interface",keyword_color)
            hashMap.put("internal",keyword_color)
            hashMap.put("into",keyword_color)
            hashMap.put("is",keyword_color)
            hashMap.put("join",keyword_color)
            hashMap.put("let",keyword_color)
            hashMap.put("lock",keyword_color)
            hashMap.put("long",keyword_color)
            hashMap.put("namespace",keyword_color)
            hashMap.put("new",keyword_color)
            hashMap.put("null",keyword_color)
            hashMap.put("object",keyword_color)
            hashMap.put("on",keyword_color)
            hashMap.put("operator",keyword_color)
            hashMap.put("orderby",keyword_color)
            hashMap.put("out",keyword_color)
            hashMap.put("override",keyword_color)
            hashMap.put("params",keyword_color)
            hashMap.put("partial",keyword_color)
            hashMap.put("private",keyword_color)
            hashMap.put("protected",keyword_color)
            hashMap.put("public",keyword_color)
            hashMap.put("readonly",keyword_color)
            hashMap.put("ref",keyword_color)
            hashMap.put("remove",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("sbyte",keyword_color)
            hashMap.put("sealed",keyword_color)
            hashMap.put("select",keyword_color)
            hashMap.put("set",keyword_color)
            hashMap.put("short",keyword_color)
            hashMap.put("sizeof",keyword_color)
            hashMap.put("stackalloc",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("string",keyword_color)
            hashMap.put("struct",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("this",keyword_color)
            hashMap.put("throw",keyword_color)
            hashMap.put("true",keyword_color)
            hashMap.put("try",keyword_color)
            hashMap.put("typeof",keyword_color)
            hashMap.put("uint",keyword_color)
            hashMap.put("ulong",keyword_color)
            hashMap.put("unchecked",keyword_color)
            hashMap.put("unsafe",keyword_color)
            hashMap.put("ushort",keyword_color)
            hashMap.put("using",keyword_color)
            hashMap.put("value",keyword_color)
            hashMap.put("var",keyword_color)
            hashMap.put("virtual",keyword_color)
            hashMap.put("void",keyword_color)
            hashMap.put("volatile",keyword_color)
            hashMap.put("where",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("yield",keyword_color)

        }

        private fun setKotlinHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {
            hashMap.put("as",keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("class",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("do",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("fun",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("interface",keyword_color)
            hashMap.put("is",keyword_color)
            hashMap.put("null",keyword_color)
            hashMap.put("object",keyword_color)
            hashMap.put("package",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("super",keyword_color)
            hashMap.put("this",keyword_color)
            hashMap.put("throw",keyword_color)
            hashMap.put("true",keyword_color)
            hashMap.put("try",keyword_color)
            hashMap.put("typealias",keyword_color)
            hashMap.put("typeof",keyword_color)
            hashMap.put("val",keyword_color)
            hashMap.put("var",keyword_color)
            hashMap.put("when",keyword_color)
            hashMap.put("while",keyword_color)

        }

        private fun setPythonHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {

            hashMap.put("False",keyword_color)
            hashMap.put("await",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("import",keyword_color)
            hashMap.put("pass",keyword_color)
            hashMap.put("None",keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("except",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("raise",keyword_color)
            hashMap.put("True",keyword_color)
            hashMap.put("class",keyword_color)
            hashMap.put("finally",keyword_color)
            hashMap.put("is",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("and",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("lambda",keyword_color)
            hashMap.put("try",keyword_color)
            hashMap.put("as",keyword_color)
            hashMap.put("def",keyword_color)
            hashMap.put("from",keyword_color)
            hashMap.put("nonlocal",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("assert",keyword_color)
            hashMap.put("del",keyword_color)
            hashMap.put("global",keyword_color)
            hashMap.put("not",keyword_color)
            hashMap.put("with",keyword_color)
            hashMap.put("async",keyword_color)
            hashMap.put("elif",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("or",keyword_color)
            hashMap.put("yield",keyword_color)

        }



        private fun setPHPHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {
            hashMap.put("abstract", keyword_color)
            hashMap.put("and",keyword_color)
            hashMap.put("as",keyword_color)

            hashMap.put("break", keyword_color)
            hashMap.put("callable",keyword_color)
            hashMap.put("case", keyword_color)
            hashMap.put("catch",keyword_color)
            hashMap.put("class",keyword_color)

            hashMap.put("clone",keyword_color)
            hashMap.put("const", keyword_color)
            hashMap.put("continue", keyword_color)
            hashMap.put("declare",keyword_color)
            hashMap.put("default",keyword_color)

            hashMap.put("do",keyword_color)
            hashMap.put("echo",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("elseif",keyword_color)

            hashMap.put("enddeclare",keyword_color)
            hashMap.put("endfor",keyword_color)
            hashMap.put("endforeach",keyword_color)
            hashMap.put("endif",keyword_color)

            hashMap.put("endswitch",keyword_color)
            hashMap.put("endwhile",keyword_color)
            hashMap.put("extends",keyword_color)

            hashMap.put("final",keyword_color)
            hashMap.put("finally",keyword_color)
            hashMap.put("fn",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("foreach",keyword_color)

            hashMap.put("function",keyword_color)
            hashMap.put("global",keyword_color)
            hashMap.put("goto",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("implements",keyword_color)

            hashMap.put("include",keyword_color)
            hashMap.put("include_once",keyword_color)
            hashMap.put("instanceof",keyword_color)
            hashMap.put("insteadof",keyword_color)
            hashMap.put("interface",keyword_color)


            hashMap.put("match",keyword_color)
            hashMap.put("namespace",keyword_color)
            hashMap.put("new",keyword_color)

            hashMap.put("or",keyword_color)
            hashMap.put("print",keyword_color)
            hashMap.put("private",keyword_color)
            hashMap.put("protected",keyword_color)
            hashMap.put("public",keyword_color)

            hashMap.put("require",keyword_color)
            hashMap.put("require_once",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("switch",keyword_color)

            hashMap.put("throw",keyword_color)
            hashMap.put("trait",keyword_color)
            hashMap.put("try",keyword_color)
            hashMap.put("use",keyword_color)

            hashMap.put("var",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("xor",keyword_color)
            hashMap.put("yield",keyword_color)
            hashMap.put("from",keyword_color)

            hashMap.put("__CLASS__",keyword_color)
            hashMap.put("__DIR__",keyword_color)
            hashMap.put("__FILE__",keyword_color)
            hashMap.put("__FUNCTION__",keyword_color)
            hashMap.put("__LINE__",keyword_color)


            hashMap.put("__METHOD__",keyword_color)
            hashMap.put("__NAMESPACE__",keyword_color)
            hashMap.put("__TRAIT__",keyword_color)
        }

        private fun setJSHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {
            hashMap.put("abstract", keyword_color)
            hashMap.put("arguments",keyword_color)
            hashMap.put("boolean",keyword_color)
            hashMap.put("break",keyword_color)

            hashMap.put("byte", keyword_color)
            hashMap.put("case", keyword_color)
            hashMap.put("catch",keyword_color)
            hashMap.put("char", keyword_color)

            hashMap.put("const",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("debugger",keyword_color)
            hashMap.put("default", keyword_color)

            hashMap.put("delete", keyword_color)
            hashMap.put("do",keyword_color)
            hashMap.put("double",keyword_color)
            hashMap.put("else",keyword_color)

            hashMap.put("eval",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("final",keyword_color)
            hashMap.put("finally",keyword_color)

            hashMap.put("float",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("function",keyword_color)
            hashMap.put("goto",keyword_color)

            hashMap.put("if",keyword_color)
            hashMap.put("implements",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("instanceof",keyword_color)

            hashMap.put("int",keyword_color)
            hashMap.put("interface",keyword_color)
            hashMap.put("let",keyword_color)
            hashMap.put("long",keyword_color)

            hashMap.put("native",keyword_color)
            hashMap.put("new",keyword_color)
            hashMap.put("null",keyword_color)
            hashMap.put("package",keyword_color)

            hashMap.put("private",keyword_color)
            hashMap.put("protected",keyword_color)
            hashMap.put("public",keyword_color)
            hashMap.put("return",keyword_color)

            hashMap.put("short",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("synchronized",keyword_color)

            hashMap.put("this",keyword_color)
            hashMap.put("throw",keyword_color)
            hashMap.put("throws",keyword_color)
            hashMap.put("transient",keyword_color)

            hashMap.put("true",keyword_color)
            hashMap.put("try",keyword_color)
            hashMap.put("typeof",keyword_color)
            hashMap.put("var",keyword_color)
            hashMap.put("void",keyword_color)
            hashMap.put("volatile",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("with",keyword_color)
            hashMap.put("yield",keyword_color)
            hashMap.put("class",keyword_color)
            hashMap.put("enum",keyword_color)
            hashMap.put("export",keyword_color)
            hashMap.put("extends",keyword_color)
            hashMap.put("import",keyword_color)
            hashMap.put("super",keyword_color)


            hashMap.put("await",keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("case",keyword_color)
            hashMap.put("catch",keyword_color)
            hashMap.put("class",keyword_color)
            hashMap.put("const",keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("debugger",keyword_color)
            hashMap.put("default",keyword_color)
            hashMap.put("delete",keyword_color)
            hashMap.put("do",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("enum",keyword_color)
            hashMap.put("export",keyword_color)
            hashMap.put("extends",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("finally",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("function",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("implements",keyword_color)
            hashMap.put("import",keyword_color)
            hashMap.put("in",keyword_color)
            hashMap.put("instanceof",keyword_color)
            hashMap.put("interfacelet",keyword_color)
            hashMap.put("new",keyword_color)
            hashMap.put("null",keyword_color)
            hashMap.put("package",keyword_color)
            hashMap.put("private",keyword_color)
            hashMap.put("protected",keyword_color)
            hashMap.put("public",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("super",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("this",keyword_color)
            hashMap.put("throw",keyword_color)
            hashMap.put("try",keyword_color)
            hashMap.put("true",keyword_color)
            hashMap.put("typeof",keyword_color)
            hashMap.put("var",keyword_color)
            hashMap.put("void",keyword_color)
            hashMap.put("while",keyword_color)
            hashMap.put("with",keyword_color)
            hashMap.put("yield",keyword_color)




        }

        private fun setCPPHashMap(hashMap: HashMap<String, Array<Int>>, keyword_color: Array<Int>) {
            hashMap.put("asm", keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("new",keyword_color)
            hashMap.put("this",keyword_color)

            hashMap.put("auto", keyword_color)
            hashMap.put("enum", keyword_color)
            hashMap.put("operator",keyword_color)
            hashMap.put("throw", keyword_color)

            hashMap.put("bool",keyword_color)
            hashMap.put("explicit",keyword_color)
            hashMap.put("private",keyword_color)
            hashMap.put("true", keyword_color)

            hashMap.put("break", keyword_color)
            hashMap.put("export",keyword_color)
            hashMap.put("protected",keyword_color)
            hashMap.put("try",keyword_color)

            hashMap.put("case",keyword_color)
            hashMap.put("extern",keyword_color)
            hashMap.put("public",keyword_color)
            hashMap.put("typedef",keyword_color)

            hashMap.put("catch",keyword_color)
            hashMap.put("false",keyword_color)
            hashMap.put("register",keyword_color)
            hashMap.put("typeid",keyword_color)

            hashMap.put("char",keyword_color)
            hashMap.put("float",keyword_color)
            hashMap.put("reinterpret_cast",keyword_color)
            hashMap.put("typename",keyword_color)

            hashMap.put("class",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("union",keyword_color)

            hashMap.put("const",keyword_color)
            hashMap.put("friend",keyword_color)
            hashMap.put("short",keyword_color)
            hashMap.put("unsigned",keyword_color)

            hashMap.put("const_cast",keyword_color)
            hashMap.put("goto",keyword_color)
            hashMap.put("signed",keyword_color)
            hashMap.put("using",keyword_color)

            hashMap.put("continue",keyword_color)
            hashMap.put("if",keyword_color)
            hashMap.put("sizeof",keyword_color)
            hashMap.put("virtual",keyword_color)

            hashMap.put("default",keyword_color)
            hashMap.put("inline",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("void",keyword_color)

            hashMap.put("delete",keyword_color)
            hashMap.put("int",keyword_color)
            hashMap.put("static_cast",keyword_color)
            hashMap.put("volatile",keyword_color)

            hashMap.put("do",keyword_color)
            hashMap.put("long",keyword_color)
            hashMap.put("struct",keyword_color)
            hashMap.put("wchar_t",keyword_color)

            hashMap.put("double",keyword_color)
            hashMap.put("mutable",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("while",keyword_color)

            hashMap.put("dynamic_cast",keyword_color)
            hashMap.put("namespace",keyword_color)
            hashMap.put("template",keyword_color)
        }

        private fun setJavaHashMap(hashMap: HashMap<String,Array<Int>>,keyword_color : Array<Int>){
            hashMap.put("[]",keyword_color)

            hashMap.put("abstract", keyword_color)
            hashMap.put("continue",keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("new",keyword_color)
            hashMap.put("switch", keyword_color)

            hashMap.put("assert", keyword_color)
            hashMap.put("default",keyword_color)
            hashMap.put("goto", keyword_color)
            hashMap.put("package",keyword_color)
            hashMap.put("synchronized",keyword_color)

            hashMap.put("boolean",keyword_color)
            hashMap.put("do", keyword_color)
            hashMap.put("if", keyword_color)
            hashMap.put("private",keyword_color)
            hashMap.put("this",keyword_color)

            hashMap.put("case",keyword_color)
            hashMap.put("enum",keyword_color)
            hashMap.put("instanceof",keyword_color)
            hashMap.put("return",keyword_color)
            hashMap.put("transient",keyword_color)

            hashMap.put("catch",keyword_color)
            hashMap.put("extends",keyword_color)
            hashMap.put("int",keyword_color)
            hashMap.put("short",keyword_color)
            hashMap.put("try",keyword_color)

            hashMap.put("char",keyword_color)
            hashMap.put("final",keyword_color)
            hashMap.put("interface",keyword_color)
            hashMap.put("static",keyword_color)
            hashMap.put("void",keyword_color)

            hashMap.put("byte",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("import",keyword_color)
            hashMap.put("public",keyword_color)
            hashMap.put("throws",keyword_color)

            hashMap.put("break",keyword_color)
            hashMap.put("double",keyword_color)
            hashMap.put("implements",keyword_color)
            hashMap.put("protected",keyword_color)
            hashMap.put("throw",keyword_color)


            hashMap.put("class",keyword_color)
            hashMap.put("finally",keyword_color)
            hashMap.put("long",keyword_color)
            hashMap.put("strictfp",keyword_color)
            hashMap.put("volatile",keyword_color)

            hashMap.put("const",keyword_color)
            hashMap.put("float",keyword_color)
            hashMap.put("native",keyword_color)
            hashMap.put("super",keyword_color)
            hashMap.put("while",keyword_color)
        }
        private fun setCHashMap(hashMap: HashMap<String,Array<Int>>,keyword_color: Array<Int>){
            hashMap.put("auto", keyword_color)
            hashMap.put("break",keyword_color)
            hashMap.put("case",keyword_color)
            hashMap.put("char",keyword_color)

            hashMap.put("const", keyword_color)
            hashMap.put("continue", keyword_color)
            hashMap.put("default",keyword_color)
            hashMap.put("do", keyword_color)

            hashMap.put("double",keyword_color)
            hashMap.put("else",keyword_color)
            hashMap.put("enum",keyword_color)
            hashMap.put("extern", keyword_color)

            hashMap.put("float", keyword_color)
            hashMap.put("for",keyword_color)
            hashMap.put("goto",keyword_color)
            hashMap.put("if",keyword_color)

            hashMap.put("int",keyword_color)
            hashMap.put("long",keyword_color)
            hashMap.put("register",keyword_color)
            hashMap.put("return",keyword_color)

            hashMap.put("short",keyword_color)
            hashMap.put("signed",keyword_color)
            hashMap.put("sizeof",keyword_color)
            hashMap.put("static",keyword_color)

            hashMap.put("struct",keyword_color)
            hashMap.put("switch",keyword_color)
            hashMap.put("typedef",keyword_color)
            hashMap.put("union",keyword_color)

            hashMap.put("unsigned",keyword_color)
            hashMap.put("void",keyword_color)
            hashMap.put("volatile",keyword_color)
            hashMap.put("while",keyword_color)
        }


    }
}